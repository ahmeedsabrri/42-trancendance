
services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - backend_staticfiles:/www/static/backend/
    depends_on:
      - backend
      - frontend
    networks:
      - trancendance-network
    restart: on-failure
    
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: dockerfile
    env_file:
      - .env
    volumes:
      - ./backend:/backend
      - backend_staticfiles:/backend/static
    depends_on:
      - db
    networks:
      - trancendance-network
    restart: always

  db:
    container_name: postgres
    image: postgres:latest
    environment:
      # DB_URL: postgresql://${SQL_USER}:${SQL_PASSWORD}@db:5432/${SQL_DB}
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_DB: ${SQL_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trancendance-network

  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
    restart: always
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules/
      - /frontend/.next/
    networks:
      - trancendance-network
networks:
  trancendance-network:
    name: trancendance-network

volumes:
  postgres_data:
  backend_staticfiles:
