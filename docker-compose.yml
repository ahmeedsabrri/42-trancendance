
services:
  nginx:
    container_name: nginx
    image: nginx:1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - backend_staticfiles:/www/static/backend/
      - ./secrets/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - trancendance-network
    restart: on-failure
    
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: dockerfile
    env_file:
      - ./secrets/backend.env
    volumes:
      - backend_staticfiles:/backend/static
    depends_on:
      - db
    networks:
      - trancendance-network
    restart: always


  db:
    container_name: postgres
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trancendance-network
    env_file:
      - ./secrets/postgres.env      


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
    restart: always
    networks:
      - trancendance-network


  redis:
    container_name: redis
    image: redis:latest
    networks:
      - trancendance-network

networks:
  trancendance-network:
    name: trancendance-network

volumes:
  postgres_data:
  backend_staticfiles:
